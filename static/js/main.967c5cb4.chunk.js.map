{"version":3,"sources":["services/use-get-top-10-by-market-cap.tsx","theme.ts","helpers/use-mounted.tsx","services/use-request-state.tsx","components/flip-letter.tsx","screen-context.ts","components/flip-row.tsx","components/currency-selector.tsx","components/use-refresh-data-automatically.ts","components/mock-loading-data.tsx","components/use-update-after-data-refreshed.ts","components/price-board.tsx","pages/main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Currency","theme","createMuiTheme","palette","primary","main","contrastText","secondary","info","typography","responsiveFontSizes","useMounted","callback","isMountedRef","useRef","useEffect","current","useRequestState","useState","isLoading","setIsLoading","errorMessage","setErrorMessage","data","setData","isError","resetError","useCallback","setGenericErrorMessage","useGetTop10ByMarketCap","currency","url","doGet","a","axios","request","Date","now","toString","method","rawData","names","Data","map","item","CoinInfo","Name","currencySymbols","DISPLAY","TOSYMBOL","prices","RAW","PRICE","toFixed","textArray","name","i","letterLength","Math","max","length","short","Array","fill","join","message","commonStyles","createStyles","dimension","width","height","centering","display","flexDirection","alignItems","justifyContent","textStyles","fontFamily","backgroundColor","color","fontWeight","textTransform","useStyles","makeStyles","root","perspective","wrapper","position","transformStyle","active","transform","front","backfaceVisibility","back","FlipLetter","isFront","row","column","size","classes","contentBox","fontSize","className","style","margin","clsx","transition","ScreenContext","React","createContext","fillUpArrayToLength","array","result","slice","push","FlipRow","frontText","backText","useMemo","frontTextArray","split","backTextArray","screen","useContext","letterSize","min","mainContainerWidth","letter","button","spacing","unselectedButton","border","selectedButton","options","Object","keys","CurrencySelector","setCurrency","option","Button","onClick","useRefreshDataAutomatically","getData","timerMs","countDown","setCountDown","previousCountDownRef","timerRef","previousDataRef","round","window","setTimeout","clearTimeout","loading","fullLoadingText","mockLoadingData","useUpdateAfterDataRefreshed","fetchedData","setFrontData","setBackData","setIsFront","prevState","infoRow","spinner","right","top","zIndex","snackbar","link","marginLeft","marginTop","textAlign","PriceBoard","isInfoShowed","setIsInfoShowed","frontData","backData","refreshingProgress","spinnerStyle","content","text","index","Alert","severity","onClose","CircularProgress","variant","value","Link","href","target","rel","title","Main","USD","Typography","component","maxWidth","InnerApp","useTheme","document","body","App","setScreen","updateScreen","innerWidth","innerHeight","resetTimer","debouncedUpdateScreen","addEventListener","removeEventListener","useGetScreenDimension","Provider","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mKAuBYA,E,qGCrBRC,EAAQC,YAAe,CACzBC,QAAS,CACPC,QAAS,CACPC,KAAM,kBACNC,aAAc,QAEhBC,UAAW,CACTF,KAAM,kBACNC,aAAc,QAEhBE,KAAM,CACJH,KAAM,kBACNC,aAAc,SAGlBG,WAAY,CACV,WAAc,yKACd,SAAY,GACZ,gBAAmB,IACnB,kBAAqB,IACrB,iBAAoB,OAKTR,EAFfA,EAAQS,YAAoBT,G,OCVbU,EAbI,SAACC,GAClB,IAAMC,EAAeC,kBAAO,GAE5BC,qBAAU,WACJF,EAAaG,UAIjBH,EAAaG,SAAU,EACvBJ,S,yBCwBWK,EA3BS,WAAkB,IAAD,EACLC,oBAAS,GADJ,mBAChCC,EADgC,KACrBC,EADqB,OAECF,mBARd,IAMa,mBAEhCG,EAFgC,KAElBC,EAFkB,OAGfJ,mBAA0B,MAHX,mBAGhCK,EAHgC,KAG1BC,EAH0B,KAIjCC,EAVoB,KAUVJ,EAEVK,EAAaC,uBAAY,WAC7BL,EAbwB,MAcvB,IAEGM,EAAyBD,uBAAY,WACzCL,EAhB0B,iBAiBzB,IAEH,MAAO,CACLH,YACAC,eACAC,eACAC,kBACAC,OACAC,UACAC,UACAC,aACAE,2B,2BHRQ5B,K,UAAAA,E,UAAAA,E,WAAAA,M,KAML,IA8DQ6B,EA5DgB,SAACC,GAG9B,IAAMC,EAAG,8EAA0ED,EAA1E,6EAH4C,EAejDb,IATFE,EANmD,EAMnDA,UACAC,EAPmD,EAOnDA,aACAC,EARmD,EAQnDA,aACAC,EATmD,EASnDA,gBACAC,EAVmD,EAUnDA,KACAC,EAXmD,EAWnDA,QACAC,EAZmD,EAYnDA,QACAC,EAbmD,EAanDA,WACAE,EAdmD,EAcnDA,uBAqCF,MAAO,CACLT,YACAI,OACAE,UACAJ,eACAW,MAvCS,uCAAG,sCAAAC,EAAA,sEAEVb,GAAa,GACbM,IAHU,SAISQ,IAAMC,QAAkC,CACzDJ,IAAI,GAAD,OAAKA,EAAL,cAAcK,KAAKC,MAAMC,SAAS,KACrCC,OAAQ,QANA,OAIJhB,EAJI,OAQJiB,EAAUjB,EAAKA,KAGfkB,EAAQD,EAAQE,KAAKC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SAASC,QAC/CC,EAAkBP,EAAQE,KAAKC,KAAI,SAAAC,GAAI,OAAIA,EAAKI,QAAQlB,GAAUmB,YAClEC,EAASV,EAAQE,KAAKC,KAAI,SAAAC,GAAI,OAAIA,EAAKO,IAAIrB,GAAUsB,MAAMC,QAAQ,MACnEC,EAAYb,EAAME,KAAI,SAACY,EAAMC,GAGjC,IAAMC,EAAeC,KAAKC,IApCL,GAoCwBJ,EAAKK,OAASV,EAAOM,GAAGI,OAASb,EAAgBS,GAAGI,OAAS,GACpGC,EAAQH,KAAKC,IAAIF,EAAeF,EAAKK,OAASV,EAAOM,GAAGI,OAASb,EAAgBS,GAAGI,OAAQ,GAClG,MAAM,GAAN,OAAUL,GAAV,OAAiB,IAAIO,MAAMD,GAAOE,KAAK,KAAKC,KAAK,KAAjD,OAAuDjB,EAAgBS,IAAvE,OAA4EN,EAAOM,OAErFhC,EAAQ8B,GArBE,kDAuBc,KAAE/B,MAAQ,KAAEA,KAAK0C,QAEvC3C,EAAgB,KAAEC,KAAK0C,SAEvBrC,IA3BQ,yBA8BVR,GAAa,GA9BH,6EAAH,uD,wBI3CP8C,EAAeC,YAAa,CAChCC,UAAW,CACTC,MAAO,OACPC,OAAQ,QAEVC,UAAW,CACTC,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,eAAgB,UAElBC,WAAY,CACVC,WAAW,8BACXC,gBAAiB7E,EAAME,QAAQC,QAAQC,KACvC0E,MAAO9E,EAAME,QAAQC,QAAQE,aAC7B0E,WAAY,IACZC,cAAe,eAIbC,EAAYC,aAAW,SAAClF,GAAD,MAAY,CACvCmF,KAAM,CACJC,YAAa,UAEfC,QAAQ,aACNC,SAAU,WACVC,eAAgB,eACbtB,EAAaE,WAElBqB,OAAQ,CACNC,UAAW,mBAEbC,MAAM,qCACJJ,SAAU,WACVK,mBAAoB,UACjB1B,EAAaE,WACbF,EAAaK,WACbL,EAAaU,YAElBiB,KAAK,qCACHH,UAAW,kBACXH,SAAU,WACVK,mBAAoB,UACjB1B,EAAaE,WACbF,EAAaK,WACbL,EAAaU,gBA2CLkB,EA9B+B,SAAC,GAA+C,IAA9CH,EAA6C,EAA7CA,MAAOE,EAAsC,EAAtCA,KAAME,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KAC3EC,EAASjB,IAETkB,EAAaF,EAAO,EACpBG,EAAwB,GAAbD,EAEjB,OACE,qBAAKE,UAAWH,EAAQf,KACnBmB,MAAO,CACLlC,MAAO+B,EACP9B,OAAQ8B,EACRI,OAAO,GAAD,OAAkB,IAAbJ,EAAL,cATC,EASD,OAJb,SAME,sBACEE,UAAWG,YAAKN,EAAQb,SAAUS,GAAWI,EAAQV,QACrDc,MAAO,CACLG,WAAW,oBAAD,OAA0B,IAAJV,EAAiB,IAAPC,EAAhC,OAHd,UAME,qBAAKK,UAAWH,EAAQR,MAAOY,MAAO,CAACF,YAAvC,SACE,+BAAOV,MAET,qBAAKW,UAAWH,EAAQN,KAAMU,MAAO,CAACF,YAAtC,SACE,+BAAOR,YC9EXc,EAAgBC,IAAMC,cAAsC,MCH5D3B,EAAYC,aAAW,SAAClF,GAAD,MAAY,CACvCmF,KAAM,CACJZ,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,eAAgB,cAIdmC,EAAsB,SAACC,EAAcnD,GACzC,IAAMoD,EAASD,EAAME,QACrB,GAAIF,EAAMnD,OAASA,EAEjB,IADA,IAAMC,EAAQD,EAASmD,EAAMnD,OACpBJ,EAAE,EAAGA,EAAEK,EAAOL,IACrBwD,EAAOE,KAAK,KAIhB,OAAOF,GAyCMG,EA/ByB,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,SAAUtB,EAAkB,EAAlBA,QAASC,EAAS,EAATA,IAChEG,EAASjB,IAETzB,EAAe6D,mBAAQ,WAC3B,OAAO5D,KAAKC,IAAIyD,EAAUxD,OAAQyD,EAASzD,UAC1C,CAACwD,EAAWC,IAETE,EAAiBD,mBAAQ,WAC7B,OAAOR,EAAoBM,EAAUI,MAAM,IAAK/D,KAC/C,CAAC2D,EAAW3D,IAETgE,EAAgBH,mBAAQ,WAC5B,OAAOR,EAAoBO,EAASG,MAAM,IAAK/D,KAC9C,CAAC4D,EAAU5D,IAERiE,EAASC,qBAAWhB,GACpBiB,EAAaF,EACjBhE,KAAKmE,IAAI,GAAIH,EAAOI,mBAAqBrE,GACzC,EAEF,OACE,qBAAK6C,UAAWH,EAAQf,KAAxB,SAEImC,EAAe5E,KAAI,SAACoF,EAAQvE,GAAT,OACjB,cAAC,EAAD,CAAYmC,MAAOoC,EAAQlC,KAAM4B,EAAcjE,GAAIuC,QAASA,EAAiBE,OAAQzC,EAAGwC,IAAKA,EAAKE,KAAM0B,GAA9BpE,S,2BCnD9E0B,EAAYC,aAAW,SAAClF,GAAD,MAAY,CACvCmF,KAAM,CACJf,MAAO,OACPG,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,eAAgB,cAElBqD,OAAQ,CACNjD,MAAO9E,EAAME,QAAQC,QAAQE,aAC7B0E,WAAY,IACZwB,OAAQvG,EAAMgI,QAAQ,GACtB,UAAW,CACTnD,gBAAiB7E,EAAME,QAAQC,QAAQC,MAEzC,gBAAiB,CACfmG,OAAQvG,EAAMgI,QAAQ,EAAG,EAAG,EAAG,KAGnCC,iBAAkB,CAChBpD,gBAAiB,cACjBqD,OAAO,aAAD,OAAelI,EAAME,QAAQC,QAAQC,OAE7C+H,eAAgB,CACdtD,gBAAiB7E,EAAME,QAAQC,QAAQC,KACvC8H,OAAO,aAAD,OAAelI,EAAME,QAAQC,QAAQC,WAIzCgI,EAAUC,OAAOC,KAAKvI,GA6BbwI,EAtB2C,SAAC,GAA6B,IAA5B1G,EAA2B,EAA3BA,SAAU2G,EAAiB,EAAjBA,YAC9DtC,EAAUjB,IAEhB,OACE,qBAAKoB,UAAWH,EAAQf,KAAxB,SAEIiD,EAAQ1F,KAAI,SAAA+F,GAAM,OAChB,cAACC,EAAA,EAAD,CAEErC,UAAWG,YACTN,EAAQ6B,OACRlG,IAAa4G,GAAUvC,EAAQiC,eAC/BtG,IAAa4G,GAAUvC,EAAQ+B,kBAEjCU,QAAS,kBAAMH,EAAYC,IAP7B,SAQEA,GAPKA,SCCFG,EAjDqB,SAACtH,EAAkBuH,EAAqBC,GAAqB,IAAD,EAC5D7H,mBAAwB,MADoC,mBACvF8H,EADuF,KAC5EC,EAD4E,KAExFC,EAAuBpI,iBAAOkI,GAE9BG,EAAWrI,iBAAsB,MACjCsI,EAAkBtI,iBAAOS,GAuC/B,OAtCAR,qBAAU,WACJqI,EAAgBpI,UAAYO,IAIhC6H,EAAgBpI,QAAUO,EAC1B0H,EAAavF,KAAK2F,MAAMN,EAAU,SACjC,CAACxH,EAAMwH,IAEVhI,qBAAU,WACJmI,EAAqBlI,UAAYgI,GAIrCE,EAAqBlI,QAAUgI,EAEb,OAAdA,IAIAA,EAAY,EACdG,EAASnI,QAAUsI,OAAOC,YAAW,WACnCN,EAAaD,EAAY,KACxB,MAEHC,EAAa,MACbH,OAfAI,EAAqBlI,QAAUgI,IAiBhC,CAACF,EAASE,IAEbjI,qBAAU,WACR,OAAO,WACoB,OAArBoI,EAASnI,SACXsI,OAAOE,aAAaL,EAASnI,YAGhC,IAEkB,OAAdgI,EACL,KACAtF,KAAK2F,MAAmB,IAAZL,EAAmBD,EAAW,MC9CxCU,EAAU,aACVC,EAAkBD,EAAU,IAAI3F,MT0BT,GS1B+B2F,EAAQ7F,QAAQG,KAAK,KAAKC,KAAK,IAS5E2F,EARU,WAEvB,IADA,IAAM5C,EAAQ,GACLvD,EAAE,EAAGA,EAAE,GAAIA,IAClBuD,EAAMG,KAAKwC,GAEb,OAAO3C,EALgB,GCsBV6C,EAxBqB,SAACC,EAAyBC,EAAmDC,GAAsD,IAAD,EACtI7I,oBAAS,GAD6H,mBAC7J6E,EAD6J,KACpJiE,EADoJ,KAE9JZ,EAAkBtI,iBAAO+I,GAmB/B,OAjBA9I,qBAAU,WACJqI,EAAgBpI,UAAY6I,GAKhCT,EAAgBpI,QAAU6I,EACN,OAAhBA,IACE9D,EACFgE,EAAYF,GAEZC,EAAaD,GAEfG,GAAW,SAAAC,GAAS,OAAKA,OAXzBb,EAAgBpI,QAAU6I,KAevB9D,G,SCVHb,EAAYC,aAAW,SAAClF,GAAD,MAAY,CACvCmF,KAAM,CACJZ,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,UAElBuF,QAAS,CACP7F,MAAO,OACPkB,SAAU,YAEZ4E,QAAS,CACPpF,MAAO9E,EAAME,QAAQI,UAAUD,aAC/BiF,SAAU,WACV6E,MAAO,EACPC,IAAK,MACLC,OAAQrK,EAAMqK,OAAOC,UAEvBtG,QAAS,CACPI,MAAO,OACPmC,OAAQvG,EAAMgI,QAAQ,EAAG,IAE3BuC,KAAM,CACJzF,MAAO9E,EAAME,QAAQI,UAAUD,aAC/BmK,WAAY,OACZC,UAAWzK,EAAMgI,QAAQ,GACzB0C,UAAW,aAmFAC,EAxE+B,SAAC,GAA4D,IAA3D9I,EAA0D,EAA1DA,SAAU2G,EAAgD,EAAhDA,YAAaoC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,gBAC7E3E,EAAUjB,IADwF,EAQpGrD,EAAuBC,GALzBX,EAHsG,EAGtGA,UACM0I,EAJgG,EAItGtI,KACAE,EALsG,EAKtGA,QACAJ,EANsG,EAMtGA,aACAW,EAPsG,EAOtGA,MAPsG,EAUtEd,mBAASyI,EAAgB1C,SAV6C,mBAUjG8D,EAViG,KAUtFjB,EAVsF,OAWxE5I,mBAASyI,EAAgB1C,SAX+C,mBAWjG+D,EAXiG,KAWvFjB,EAXuF,KAYlGhE,EAAU6D,EAA4BC,EAAaC,EAAcC,GACjEkB,EAAqBpC,EAA4BgB,EAAa7H,EAAO,KAE3ErB,GAAW,WACTqB,OAGF,IAAMkJ,EAAe,CAACxF,UAAW,mCAE3ByF,EAAU7D,mBAAQ,WACtB,OACE,mCACGyD,EAAUpI,KAAI,SAACyI,EAAMC,GACpB,OAAO,cAAC,EAAD,CAASjE,UAAWgE,EAAM/D,SAAU2D,EAASK,GAAQtF,QAASA,EAAqBC,IAAKqF,GAAZA,UAIxF,CAACL,EAAUD,EAAWhF,IAEzB,OACE,sBAAKO,UAAWH,EAAQf,KAAxB,UAGI3D,GACA,cAAC6J,EAAA,EAAD,CACIC,SAAS,QACTjF,UAAWH,EAAQlC,QAFvB,SAGE5C,IAIFwJ,GACA,cAACS,EAAA,EAAD,CACIC,SAAS,OACTjF,UAAWH,EAAQlC,QACnBuH,QAAS,kBAAMV,GAAgB,IAHnC,0FAOF,sBAAKxE,UAAWH,EAAQ+D,QAAxB,UAEI/I,GAAa,cAACsK,EAAA,EAAD,CAAkBvF,KAAM,GAAII,UAAWH,EAAQgE,QAAS5D,MAAO2E,IAIrD,OAAvBD,GAA+B,cAACQ,EAAA,EAAD,CAAkBvF,KAAM,GAAIwF,QAAQ,SAASpF,UAAWH,EAAQgE,QAASwB,MAAOV,EAAoB1E,MAAO2E,IAG5I,cAAC,EAAD,CAAkBpJ,SAAUA,EAAU2G,YAAaA,OAGnD0C,EAEF,cAACS,EAAA,EAAD,CAAMC,KAAK,qCAAqCC,OAAO,SAASC,IAAI,WAAWzF,UAAWH,EAAQqE,KAAlG,mD,QC7GAtF,EAAYC,aAAW,SAAClF,GAAD,MAAY,CACvCmF,KAAM,CACJN,gBAAiB7E,EAAME,QAAQI,UAAUF,KACzCmE,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBN,MAAO,QAET2H,MAAO,CACLnH,WAAW,8BACXE,MAAO9E,EAAME,QAAQI,UAAUD,aAC/B2E,cAAe,aACf0F,UAAW,SACXnE,OAAQvG,EAAMgI,QAAQ,EAAG,EAAG,EAAG,QAuBpBgE,EAfmB,WAChC,IAAM9F,EAAUjB,IADsB,EAENhE,mBAASlB,EAASkM,KAFZ,mBAE/BpK,EAF+B,KAErB2G,EAFqB,OAGEvH,oBAAS,GAHX,mBAG/B2J,EAH+B,KAGjBC,EAHiB,KAKtC,OACE,sBAAKxE,UAAWH,EAAQf,KAAxB,UACE,cAAC+G,EAAA,EAAD,CAAYC,UAAW,KAAMV,QAAS,KAAMpF,UAAWH,EAAQ6F,MAA/D,wCAGA,cAAC,EAAD,CAAYlK,SAAUA,EAAU2G,YAAaA,EAA4BoC,aAAcA,EAAcC,gBAAiBA,GAAvDhJ,OClB/DoD,EAAYC,aAAW,SAAClF,GAAD,MAAY,CACvCmF,KAAM,CACJf,MAAO,QACPgI,SAAU,OACV7F,OAAQvG,EAAMgI,QAAQ,GAAI,QAIxBqE,GAAqB,WACzB,IAAMnG,EAAUjB,IACVjF,EAAQsM,cACR7E,EAASC,qBAAWhB,GAM1B,OAJA5F,qBAAU,WACRyL,SAASC,KAAKlG,MAAMzB,gBAAkB7E,EAAME,QAAQI,UAAUF,OAC7D,CAACJ,IAEW,OAAXyH,EACK,6BAIP,qBAAKpB,UAAWH,EAAQf,KAAxB,SACE,cAAC,EAAD,OAKSsH,GAzCO,WACpB,IAAMhF,EREsB,WAAO,IAAD,EACNxG,mBAAiC,MAD3B,mBAC3BwG,EAD2B,KACnBiF,EADmB,KAE5BxD,EAAWrI,iBAAsB,MAEjC8L,EAAejL,uBAAY,WAC/B,IAAM0C,EAAQiF,OAAOuD,WACrBF,EAAU,CACRtI,QACAC,OAAQgF,OAAOwD,YACfhF,mBAAoBpE,KAAKmE,IAAI,IAAMxD,OAEpC,IAEG0I,EAAapL,uBAAY,WACJ,OAArBwH,EAASnI,UACXsI,OAAOE,aAAaL,EAASnI,SAC7BmI,EAASnI,QAAU,QAEpB,IAEGgM,EAAwBrL,uBAAY,WACxCoL,IACA5D,EAASnI,QAAUsI,OAAOC,WAAWqD,EAAc,OAClD,CAACG,EAAYH,IAahB,OAXA7L,qBAAU,WACR6L,MACC,CAACA,IAEJ7L,qBAAU,WAER,OADAuI,OAAO2D,iBAAiB,SAAUD,GAC3B,WACL1D,OAAO4D,oBAAoB,SAAUF,MAEtC,CAACA,IAEGtF,EQtCQyF,GAEf,OACE,cAACxG,EAAcyG,SAAf,CAAwBzB,MAAOjE,EAA/B,SACE,eAAC2F,EAAA,EAAD,CAAepN,MAAOA,EAAtB,UACE,cAACqN,EAAA,EAAD,IACA,cAAC,GAAD,UCAOC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF1B,SAAS2B,eAAe,SAM1BZ,O","file":"static/js/main.967c5cb4.chunk.js","sourcesContent":["import useRequestState from \"./use-request-state\";\nimport axios from \"axios\";\n\ninterface Top10ByMarketCapResponse {\n  Data: Item[]\n}\n\ninterface Item {\n  CoinInfo: {\n    Name: string,\n  },\n  DISPLAY: {\n    [key in Currency]: {\n      TOSYMBOL: string\n    }\n  },\n  RAW: {\n    [key in Currency]: {\n      PRICE: number\n    }\n  }\n}\n\nexport enum Currency {\n  USD='USD',\n  CAD='CAD',\n  EUR='EUR'\n}\n\nexport const LETTER_LENGTH = 16;\n\nconst useGetTop10ByMarketCap = (currency: Currency) => {\n  // I know it's bad practise to hard coding api_key, but there is no way to hide secret in frontend anyways\n  // Usually I'll let node server to proxy the API calls\n  const url = `https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=${currency}&api_key=4d646ccdea5094e1300c8846841310f384150830ecfa7ad715085f6da4320bab`;\n\n  const {\n    isLoading,\n    setIsLoading,\n    errorMessage,\n    setErrorMessage,\n    data,\n    setData,\n    isError,\n    resetError,\n    setGenericErrorMessage\n  } = useRequestState<string[]>();\n\n  const doGet = async () => {\n    try {\n      setIsLoading(true);\n      resetError();\n      const data = await axios.request<Top10ByMarketCapResponse>({\n        url: `${url}&a=${Date.now().toString(36)}`,\n        method: 'get'\n      });\n      const rawData = data.data;\n\n      // converting raw data to an array of string, string starts with coin name, end with coin price\n      const names = rawData.Data.map(item => item.CoinInfo.Name);\n      const currencySymbols = rawData.Data.map(item => item.DISPLAY[currency].TOSYMBOL);\n      const prices = rawData.Data.map(item => item.RAW[currency].PRICE.toFixed(2));\n      const textArray = names.map((name, i) => {\n        // fill the text so that it's at least LETTER_LENGTH long\n        // In case the raw text is longer than LETTER_LENGTH, pad it with one extra white space\n        const letterLength = Math.max(LETTER_LENGTH, name.length + prices[i].length + currencySymbols[i].length + 1);\n        const short = Math.max(letterLength - name.length - prices[i].length - currencySymbols[i].length, 0);\n        return `${name}${new Array(short).fill(' ').join('')}${currencySymbols[i]}${prices[i]}`\n      });\n      setData(textArray);\n    } catch (e) {\n      const hasErrorMessage = e.data && e.data.message;\n      if (hasErrorMessage) {\n        setErrorMessage(e.data.message)\n      } else {\n        setGenericErrorMessage()\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  };\n\n  return {\n    isLoading,\n    data,\n    isError,\n    errorMessage,\n    doGet\n  }\n};\n\nexport default useGetTop10ByMarketCap\n","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: 'rgb(60, 63, 65)',\n      contrastText: '#eee',\n    },\n    secondary: {\n      main: 'rgb(43, 43, 43)',\n      contrastText: '#eee',\n    },\n    info: {\n      main: 'rgb(60, 63, 65)',\n      contrastText: '#eee',\n    }\n  },\n  typography: {\n    \"fontFamily\": \"system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji\",\n    \"fontSize\": 14,\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n  }\n});\ntheme = responsiveFontSizes(theme);\n\nexport default theme;\n","import {useEffect, useRef} from \"react\";\n\nconst useMounted = (callback: () => void) => {\n  const isMountedRef = useRef(false);\n\n  useEffect(() => {\n    if (isMountedRef.current) {\n      return\n    }\n\n    isMountedRef.current = true;\n    callback()\n  })\n};\n\nexport default useMounted\n","import {useCallback, useState} from \"react\";\n\nconst BLANK_ERROR_MESSAGE = '';\nconst GENERIC_ERROR_MESSAGE = 'Sever Error';\n\n/**\n * All methods exposed are either React's setState function, or wrapped with useCallback so that their identity will remain stable.\n */\nconst useRequestState = <DataType,>() => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(BLANK_ERROR_MESSAGE);\n  const [data, setData] = useState<DataType | null>(null);\n  const isError = errorMessage !== BLANK_ERROR_MESSAGE;\n\n  const resetError = useCallback(() => {\n    setErrorMessage(BLANK_ERROR_MESSAGE)\n  }, []);\n\n  const setGenericErrorMessage = useCallback(() => {\n    setErrorMessage(GENERIC_ERROR_MESSAGE)\n  }, []);\n\n  return {\n    isLoading,\n    setIsLoading,\n    errorMessage,\n    setErrorMessage,\n    data,\n    setData,\n    isError,\n    resetError,\n    setGenericErrorMessage\n  }\n};\n\nexport default useRequestState\n","import React from \"react\";\nimport {createStyles, makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport theme from \"../theme\";\n\nconst commonStyles = createStyles({\n  dimension: {\n    width: '100%',\n    height: '100%'\n  },\n  centering: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textStyles: {\n    fontFamily: `\"Archivo Black\", sans-serif`,\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    fontWeight: 400,\n    textTransform: 'uppercase'\n  }\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    perspective: '1000px',\n  },\n  wrapper: {\n    position: 'relative',\n    transformStyle: 'preserve-3d',\n    ...commonStyles.dimension,\n  },\n  active: {\n    transform: 'rotateX(180deg)'\n  },\n  front: {\n    position: 'absolute',\n    backfaceVisibility: 'hidden',\n    ...commonStyles.dimension,\n    ...commonStyles.centering,\n    ...commonStyles.textStyles\n  },\n  back: {\n    transform: 'rotateX(180deg)',\n    position: 'absolute',\n    backfaceVisibility: 'hidden',\n    ...commonStyles.dimension,\n    ...commonStyles.centering,\n    ...commonStyles.textStyles\n  }\n}));\n\ninterface FlipLetterProps {\n  front: string,\n  back: string,\n  isFront: boolean,\n  column: number,\n  row: number,\n  size: number\n}\n\nconst FlipLetter: React.FC<FlipLetterProps> = ({front, back, isFront, row, column, size}) => {\n  const classes= useStyles();\n  const marginX = 1;\n  const contentBox = size - 2 * marginX;\n  const fontSize = contentBox * 0.5;\n\n  return (\n    <div className={classes.root}\n         style={{\n           width: contentBox,\n           height: contentBox,\n           margin: `${contentBox * 0.15}px ${marginX}px`\n         }}>\n      <div\n        className={clsx(classes.wrapper, !isFront && classes.active)}\n        style={{\n          transition: `transform 1000ms ${row*500 + column*100}ms`,\n        }}\n      >\n        <div className={classes.front} style={{fontSize}}>\n          <span>{front}</span>\n        </div>\n        <div className={classes.back} style={{fontSize}}>\n          <span>{back}</span>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default FlipLetter\n","import React, {useCallback, useEffect, useRef, useState} from \"react\";\n\ninterface ScreenDimension {\n  width: number,\n  height: number,\n  mainContainerWidth: number\n}\n\nconst ScreenContext = React.createContext<null | ScreenDimension>(null);\n\nconst useGetScreenDimension = () => {\n  const [screen, setScreen] = useState<null | ScreenDimension>(null);\n  const timerRef = useRef<null | number>(null);\n\n  const updateScreen = useCallback(() => {\n    const width = window.innerWidth;\n    setScreen({\n      width,\n      height: window.innerHeight,\n      mainContainerWidth: Math.min(1000, width)\n    })\n  }, []);\n\n  const resetTimer = useCallback(() => {\n    if (timerRef.current !== null) {\n      window.clearTimeout(timerRef.current);\n      timerRef.current = null;\n    }\n  }, []);\n\n  const debouncedUpdateScreen = useCallback(() => {\n    resetTimer();\n    timerRef.current = window.setTimeout(updateScreen, 500)\n  }, [resetTimer, updateScreen]);\n\n  useEffect(() => {\n    updateScreen()\n  }, [updateScreen]);\n\n  useEffect(() => {\n    window.addEventListener('resize', debouncedUpdateScreen);\n    return () => {\n      window.removeEventListener('resize', debouncedUpdateScreen);\n    }\n  }, [debouncedUpdateScreen]);\n\n  return screen\n};\n\nexport {ScreenContext, useGetScreenDimension}\n","import React, {useContext, useEffect, useMemo, useRef, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport FlipLetter from \"./flip-letter\";\nimport {ScreenContext} from \"../screen-context\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  }\n}));\n\nconst fillUpArrayToLength = (array: any[], length: number) => {\n  const result = array.slice();\n  if (array.length < length) {\n    const short = length - array.length;\n    for (let i=0; i<short; i++) {\n      result.push(' ')\n    }\n  }\n\n  return result\n};\n\ninterface FlipRowProps {\n  frontText: string,\n  backText: string,\n  isFront: boolean,\n  row: number\n}\n\nconst FlipRow: React.FC<FlipRowProps> = ({frontText, backText, isFront, row}) => {\n  const classes= useStyles();\n\n  const letterLength = useMemo(() => {\n    return Math.max(frontText.length, backText.length)\n  }, [frontText, backText]);\n\n  const frontTextArray = useMemo(() => {\n    return fillUpArrayToLength(frontText.split(''), letterLength)\n  }, [frontText, letterLength]);\n\n  const backTextArray = useMemo(() => {\n    return fillUpArrayToLength(backText.split(''), letterLength)\n  }, [backText, letterLength]);\n\n  const screen = useContext(ScreenContext);\n  const letterSize = screen ?\n    Math.min(50, screen.mainContainerWidth / letterLength) :\n    0;\n\n  return (\n    <div className={classes.root}>\n      {\n        frontTextArray.map((letter, i) => (\n          <FlipLetter front={letter} back={backTextArray[i]} isFront={isFront} key={i} column={i} row={row} size={letterSize}/>\n        ))\n      }\n    </div>\n  )\n};\n\nexport default FlipRow\n","import React, {SetStateAction, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button} from \"@material-ui/core\";\nimport {Currency} from \"../services/use-get-top-10-by-market-cap\";\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  button: {\n    color: theme.palette.primary.contrastText,\n    fontWeight: 700,\n    margin: theme.spacing(1),\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main\n    },\n    '&:first-child': {\n      margin: theme.spacing(1, 1, 1, 0),\n    }\n  },\n  unselectedButton: {\n    backgroundColor: 'transparent',\n    border: `1px solid ${theme.palette.primary.main}`\n  },\n  selectedButton: {\n    backgroundColor: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`\n  }\n}));\n\nconst options = Object.keys(Currency) as Currency[];\n\ninterface CurrencySelectorProps {\n  currency: Currency,\n  setCurrency: React.Dispatch<SetStateAction<Currency>>\n}\n\nconst CurrencySelector: React.FC<CurrencySelectorProps> = ({currency, setCurrency}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {\n        options.map(option =>\n          <Button\n            key={option}\n            className={clsx(\n              classes.button,\n              currency === option && classes.selectedButton,\n              currency !== option && classes.unselectedButton\n            )}\n            onClick={() => setCurrency(option)}\n          >{option}</Button>\n        )\n      }\n    </div>\n  )\n};\n\nexport default CurrencySelector\n","import {useEffect, useRef, useState} from \"react\";\n\nconst useRefreshDataAutomatically = (data: null | any, getData: () => void, timerMs: number) => {\n  const [countDown, setCountDown] = useState<null | number>(null);\n  const previousCountDownRef = useRef(countDown);\n\n  const timerRef = useRef<null | number>(null);\n  const previousDataRef = useRef(data);\n  useEffect(() => {\n    if (previousDataRef.current === data) {\n      return\n    }\n\n    previousDataRef.current = data;\n    setCountDown(Math.round(timerMs / 1000));\n  }, [data, timerMs]);\n\n  useEffect(() => {\n    if (previousCountDownRef.current === countDown) {\n      previousCountDownRef.current = countDown;\n      return\n    }\n    previousCountDownRef.current = countDown;\n\n    if (countDown === null) {\n      return\n    }\n\n    if (countDown > 0) {\n      timerRef.current = window.setTimeout(() => {\n        setCountDown(countDown - 1)\n      }, 1000)\n    } else {\n      setCountDown(null);\n      getData();\n    }\n  }, [getData, countDown]);\n\n  useEffect(() => {\n    return () => {\n      if (timerRef.current !== null) {\n        window.clearTimeout(timerRef.current);\n      }\n    }\n  }, []);\n\n  return countDown === null ?\n    null :\n    Math.round((countDown * 1000 / timerMs) * 100)\n};\n\nexport default useRefreshDataAutomatically\n","import {LETTER_LENGTH} from \"../services/use-get-top-10-by-market-cap\";\n\nconst loading = 'loading...';\nconst fullLoadingText = loading + new Array(LETTER_LENGTH - loading.length).fill(' ').join('');\nconst mockLoadingData = (() => {\n  const array = [];\n  for (let i=0; i<10; i++) {\n    array.push(fullLoadingText)\n  }\n  return array;\n})();\n\nexport default mockLoadingData\n","import React, {SetStateAction, useEffect, useRef, useState} from \"react\";\n\nconst useUpdateAfterDataRefreshed = (fetchedData: null | any, setFrontData: React.Dispatch<SetStateAction<any>>, setBackData: React.Dispatch<SetStateAction<any>>) => {\n  const [isFront, setIsFront] = useState(false);\n  const previousDataRef = useRef(fetchedData);\n\n  useEffect(() => {\n    if (previousDataRef.current === fetchedData) {\n      previousDataRef.current = fetchedData;\n      return\n    }\n\n    previousDataRef.current = fetchedData;\n    if (fetchedData !== null) {\n      if (isFront) {\n        setBackData(fetchedData)\n      } else {\n        setFrontData(fetchedData)\n      }\n      setIsFront(prevState => !prevState);\n    }\n  });\n\n  return isFront\n};\n\nexport default useUpdateAfterDataRefreshed\n","import React, {SetStateAction, useMemo, useState} from \"react\";\nimport useMounted from \"../helpers/use-mounted\";\nimport useGetTop10ByMarketCap, {Currency} from \"../services/use-get-top-10-by-market-cap\";\nimport FlipRow from \"../components/flip-row\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { CircularProgress } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport CurrencySelector from \"./currency-selector\";\nimport useRefreshDataAutomatically from \"./use-refresh-data-automatically\";\nimport mockLoadingData from \"./mock-loading-data\";\nimport useUpdateAfterDataRefreshed from \"./use-update-after-data-refreshed\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  infoRow: {\n    width: '100%',\n    position: 'relative',\n  },\n  spinner: {\n    color: theme.palette.secondary.contrastText,\n    position: 'absolute',\n    right: 0,\n    top: '50%',\n    zIndex: theme.zIndex.snackbar\n  },\n  message: {\n    width: '100%',\n    margin: theme.spacing(2, 0)\n  },\n  link: {\n    color: theme.palette.secondary.contrastText,\n    marginLeft: 'auto',\n    marginTop: theme.spacing(2),\n    textAlign: 'right'\n  }\n}));\n\ninterface PriceBoardProps {\n  currency: Currency,\n  setCurrency: React.Dispatch<SetStateAction<Currency>>,\n  isInfoShowed: boolean,\n  setIsInfoShowed: React.Dispatch<SetStateAction<boolean>>,\n}\n\nconst PriceBoard: React.FC<PriceBoardProps> = ({currency, setCurrency, isInfoShowed, setIsInfoShowed}) => {\n  const classes = useStyles();\n  const {\n    isLoading,\n    data: fetchedData,\n    isError,\n    errorMessage,\n    doGet\n  } = useGetTop10ByMarketCap(currency);\n\n  const [frontData, setFrontData] = useState(mockLoadingData.slice());\n  const [backData, setBackData] = useState(mockLoadingData.slice());\n  const isFront = useUpdateAfterDataRefreshed(fetchedData, setFrontData, setBackData);\n  const refreshingProgress = useRefreshDataAutomatically(fetchedData, doGet, 30000);\n\n  useMounted(() => {\n    doGet()\n  });\n\n  const spinnerStyle = {transform: 'translateY(-50%) rotate(-90deg)'};\n\n  const content = useMemo(() => {\n    return (\n      <>\n        {frontData.map((text, index) => {\n          return <FlipRow frontText={text} backText={backData[index]} isFront={isFront} key={index} row={index}/>\n        })}\n      </>\n    )\n  }, [backData, frontData, isFront]);\n\n  return (\n    <div className={classes.root}>\n\n      {\n        isError &&\n        <Alert\n            severity=\"error\"\n            className={classes.message}\n        >{errorMessage}</Alert>\n      }\n\n      {\n        isInfoShowed &&\n        <Alert\n            severity=\"info\"\n            className={classes.message}\n            onClose={() => setIsInfoShowed(false)}\n        >Coin prices change quickly, data is refreshed automatically every 30 seconds</Alert>\n      }\n\n      <div className={classes.infoRow}>\n        {\n          isLoading && <CircularProgress size={25} className={classes.spinner} style={spinnerStyle}/>\n        }\n\n        {\n          refreshingProgress !== null && <CircularProgress size={25} variant=\"static\" className={classes.spinner} value={refreshingProgress} style={spinnerStyle}/>\n        }\n\n        <CurrencySelector currency={currency} setCurrency={setCurrency}/>\n      </div>\n\n      { content }\n\n      <Link href=\"https://min-api.cryptocompare.com/\" target=\"_blank\" rel=\"noopener\" className={classes.link}>\n        API 💪 By CryptoCompare\n      </Link>\n    </div>\n  )\n};\n\nexport default PriceBoard\n","import React, {useState} from \"react\";\nimport PriceBoard from \"../components/price-board\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Typography} from \"@material-ui/core\";\nimport {Currency} from \"../services/use-get-top-10-by-market-cap\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  title: {\n    fontFamily: `\"Archivo Black\", sans-serif`,\n    color: theme.palette.secondary.contrastText,\n    textTransform: 'capitalize',\n    textAlign: 'center',\n    margin: theme.spacing(0, 0, 1, 0)\n  }\n}));\n\ninterface MainProps {\n\n}\n\nconst Main: React.FC<MainProps> = () => {\n  const classes = useStyles();\n  const [currency, setCurrency] = useState(Currency.USD);\n  const [isInfoShowed, setIsInfoShowed] = useState(true);\n\n  return (\n    <div className={classes.root}>\n      <Typography component={'h2'} variant={'h6'} className={classes.title}>\n        top 10 coins by market cap\n      </Typography>\n      <PriceBoard currency={currency} setCurrency={setCurrency} key={currency} isInfoShowed={isInfoShowed} setIsInfoShowed={setIsInfoShowed}/>\n    </div>\n  )\n};\n\nexport default Main\n","import React, {useContext, useEffect} from 'react';\nimport {CssBaseline, useTheme} from \"@material-ui/core\";\nimport {makeStyles, ThemeProvider} from '@material-ui/core/styles';\nimport theme from \"./theme\";\nimport Main from \"./pages/main\";\nimport {useGetScreenDimension, ScreenContext} from \"./screen-context\";\n\nconst App: React.FC = () => {\n  const screen = useGetScreenDimension();\n\n  return (\n    <ScreenContext.Provider value={screen}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <InnerApp/>\n      </ThemeProvider>\n    </ScreenContext.Provider>\n  )\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100vw',\n    maxWidth: '100%',\n    margin: theme.spacing(10, 0)\n  },\n}));\n\nconst InnerApp: React.FC = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const screen = useContext(ScreenContext);\n\n  useEffect(() => {\n    document.body.style.backgroundColor = theme.palette.secondary.main;\n  }, [theme]);\n\n  if (screen === null) {\n    return <></>\n  }\n\n  return (\n    <div className={classes.root}>\n      <Main/>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}